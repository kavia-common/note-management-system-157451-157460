{"is_source_file": true, "format": "TypeScript (Angular component)", "description": "This file defines an Angular root component for a note management system, including data binding, event handling, and interaction with a notes service.", "external_files": ["./app.component.html", "./app.component.css", "./components/header/header.component", "./components/sidebar/sidebar.component", "./components/notes-list/notes-list.component", "./components/note-editor/note-editor.component", "./services/notes.service", "./models/note.model"], "external_methods": ["this.notesService.listNotes", "this.notesService.deleteNote", "this.notesService.updateNote", "this.notesService.createNote"], "published": ["AppComponent"], "classes": [{"name": "AppComponent", "description": "Root component managing the notes application, handling note display, filtering, creation, editing, and deletion."}], "methods": [{"name": "ngOnInit", "description": "Initializes the component by loading notes from the service."}, {"name": "loadNotes", "description": "Fetches notes based on current search query and updates the notes signal."}, {"name": "onSearchChange", "description": "Updates the search query and reloads notes based on new query."}, {"name": "onFilterChange", "description": "Updates the note filter (all or starred)."}, {"name": "onCreateNew", "description": "Creates a new empty note and sets it as the selected note for editing."}, {"name": "onSelectNote", "description": "Sets the selected note for viewing or editing."}, {"name": "onDeleteNote", "description": "Deletes a note via the service and updates local note list."}, {"name": "onToggleStar", "description": "Toggles the starred status of a note, updating both local state and server if applicable."}, {"name": "onSaveNote", "description": "Creates a new note or updates an existing one via the service, and updates local state."}, {"name": "onCancelEdit", "description": "Cancels editing by deselecting the current note if it is not persisted yet."}, {"name": "constructor(private readonly notesService: NotesService) {} constructor", "scope": "AppComponent", "scopeKind": "class", "description": "unavailable"}], "calls": ["this.notesService.listNotes", "this.notesService.deleteNote", "this.notesService.updateNote", "this.notesService.createNote", "this.notes().filter", "this.notes().map", "console.error"], "search-terms": ["Angular root component", "notes management", "filter notes", "create note", "update note", "delete note", "starred notes", "observable", "signal", "computed"], "state": 2, "file_id": 13, "knowledge_revision": 80, "git_revision": "f7812355d7e5975827cb52821177fd4fa9b7b80c", "revision_history": [{"37": "f7812355d7e5975827cb52821177fd4fa9b7b80c"}, {"71": "f7812355d7e5975827cb52821177fd4fa9b7b80c"}, {"78": "f7812355d7e5975827cb52821177fd4fa9b7b80c"}, {"80": "f7812355d7e5975827cb52821177fd4fa9b7b80c"}], "ctags": [{"_type": "tag", "name": "AppComponent", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^export class AppComponent implements OnInit {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "FilterKey", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^type FilterKey = 'all' | 'starred';$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^  constructor(private readonly notesService: NotesService) {}$/", "language": "TypeScript", "kind": "method", "scope": "AppComponent", "scopeKind": "class"}, {"_type": "tag", "name": "f", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^    const f = this.filter();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "matchesFilter", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^      const matchesFilter = f === 'all' ? true : !!n.starred;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "matchesQuery", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^      const matchesQuery =$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^  protected notes = signal<Note[]>([]);$/", "language": "TypeScript", "kind": "property", "scope": "AppComponent", "scopeKind": "class"}, {"_type": "tag", "name": "notesService", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^  constructor(private readonly notesService: NotesService) {}$/", "language": "TypeScript", "kind": "property", "scope": "AppComponent", "scopeKind": "class"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^    const q = this.searchQuery().toLowerCase();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^    const q = this.searchQuery();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "starred", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^    const updated: Note = { ...n, starred: !n.starred };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^  title = 'Notes';$/", "language": "TypeScript", "kind": "property", "scope": "AppComponent", "scopeKind": "class"}, {"_type": "tag", "name": "true", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^      const matchesFilter = f === 'all' ? true : !!n.starred;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/note-management-system-157451-157460/notes_frontend/src/app/app.component.ts", "pattern": "/^    const updated: Note = { ...n, starred: !n.starred };$/", "language": "TypeScript", "kind": "constant"}], "hash": "c0dd6e59a20ff2291f94f3c133c04082", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/app.component.ts", "fields": [{"name": "protected notes = signal<Note[]>([]);", "scope": "AppComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "constructor(private readonly notesService: NotesService) {}", "scope": "AppComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "title = 'Notes';", "scope": "AppComponent", "scopeKind": "class", "description": "unavailable"}]}